name: Release

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build plugin
        run: npm run build

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=$(git describe --tags --abbrev=0)
          PLUGIN_NAME="MCP API for Obsidian"
          VERSION=$(echo $TAG | sed 's/^v//')

          # Extract changelog for this version
          CHANGELOG=""
          CAPTURE=false
          NEXT_VERSION=false

          while IFS= read -r line; do
            if [[ $line == "## [$VERSION]"* ]]; then
              CAPTURE=true
              continue
            fi

            if [[ $CAPTURE == true && $line == "## "* ]]; then
              NEXT_VERSION=true
            fi

            if [[ $CAPTURE == true && $NEXT_VERSION == false && -n "$line" ]]; then
              CHANGELOG+="$line\n"
            fi
          done < CHANGELOG.md

          # Remove trailing newlines
          CHANGELOG=$(echo -e "$CHANGELOG" | sed -e :a -e '/^\n*$/{$d;N;ba' -e '}')

          # Create a zip file with the built plugin files
          mkdir ${{ github.event.repository.name }}
          cp main.js manifest.json styles.css ${{ github.event.repository.name }}/
          zip -r ${{ github.event.repository.name }}.zip ${{ github.event.repository.name }}/

          # Create release
          if [ -n "$CHANGELOG" ]; then
            echo -e "$CHANGELOG" > release_notes.md
            gh release create "$TAG" \
              --title="$PLUGIN_NAME $VERSION" \
              --notes-file=release_notes.md \
              --draft \
              ${{ github.event.repository.name }}.zip main.js manifest.json styles.css
          else
            gh release create "$TAG" \
              --title="$PLUGIN_NAME $VERSION" \
              --draft \
              ${{ github.event.repository.name }}.zip main.js manifest.json styles.css
          fi
