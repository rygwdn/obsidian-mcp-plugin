---
description: Details on how to perform a release
globs:
alwaysApply: false
---
# Release Process

Follow these steps to properly release a new version of the MCP plugin:

## Pre-Release Checklist
1. Ensure all tests pass: `npm run check`
2. Ensure all changes have been committed to the repository
3. Update [CHANGELOG.md](mdc:CHANGELOG.md) with the new version:
   ```markdown
   ## [x.y.z] - YYYY-MM-DD
   - feat: New feature description
   - fix: Bug fix description
   - refactor: Other changes
   ```

## Version Bump
Run the version bump script to update version references:
```bash
npm run version
```

This script:
- Updates the version in [manifest.json](mdc:manifest.json)
- Updates [versions.json](mdc:versions.json) with the new version
- Automatically stages these files for commit (`git add manifest.json versions.json`)

## Final Checks
Always rerun checks before completing the release:
```bash
npm run check
```

## Tag and Push
Create and push a git tag for the release:
```bash
git tag x.y.z
git push origin x.y.z
```

## GitHub Release
After pushing the tag, GitHub Actions will:
- Create a draft release with notes from the CHANGELOG
- Build the plugin

## Final Steps
1. Wait for GitHub workflows to complete:
   ```bash
   gh workflow view release --web
   ```
2. Check the workflow status:
   ```bash
   gh run list --workflow=release.yml
   ```
3. Once completed, get the release URL:
   ```bash
   gh release view x.y.z --web
   ```
4. Review the draft release on GitHub
5. Make any necessary adjustments to the release notes
6. Publish the release
7. Update community announcements as needed
