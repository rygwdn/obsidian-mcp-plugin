---
description: Details on how to perform a release
globs:
alwaysApply: false
---
# Release Process

Follow these steps to properly release a new version of the MCP plugin:

## Pre-Release Checklist
- Ensure all tests pass: `npm run check`
- Ensure all changes have been committed to the repository
- Review the non-test diff since the last release
- Update [CHANGELOG.md](mdc:CHANGELOG.md) with the new version:
   ```markdown
   ## [x.y.z] - YYYY-MM-DD
   - feat: New feature description
   - fix: Bug fix description
   - refactor: Other changes
   ```

## Version Bump
- Update the version number in the package.json
- Run the version bump script to update version references `npm run version`
  This script:
  - Updates the version in [manifest.json](mdc:manifest.json)
  - Updates [versions.json](mdc:versions.json) with the new version
- Run a final check: `npm run check`
- Commit all the changes `git commit -a -m 'release: prepare x.y.z release'`

## Tag and Push
```bash
git tag x.y.z
git push origin x.y.z
```

## GitHub Release
After pushing the tag, GitHub Actions will:
- Create a draft release with notes from the CHANGELOG
- Build the plugin

## Final Steps
- Wait for GitHub workflows to complete:
   ```bash
   # Get the run IDs for the latest release
   gh run list -c $(git rev-parse x.y.z)
   # Wait for the run to complete
   gh run watch {CI run id}
   gh run watch {release run id}
   ```
- Once completed, view the release URL so the user can update and publish it:
   ```bash
   gh release view x.y.z --web
   ```
